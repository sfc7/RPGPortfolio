	// LJS

#pragma once

#include "NativeGameplayTags.h"

namespace RPGGameplayTag
{
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Move_Keyboard);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Look_Mouse);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Jump_Keyboard);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_LightAttack_Keyboard);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_HeavyAttack_Keyboard);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_ParryingAttack_Keyboard);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_ShowDebug_Keyboard);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Dodge_Keyboard);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Hold);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Hold_Defense_Keyboard);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Toggle);

	
	//Player
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weapon_Fighter_Hand_l);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weapon_Fighter_Hand_r);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weapon_Fighter_Foot_l);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weapon_Fighter_Foot_r);

	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Light);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Heavy);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_HitPause);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Dodge);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Defense);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Parry);
	
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_CanHeavyAttackCombo);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Dodge);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Defense);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_CanParryingAttack);
	
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_HitPause);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_DefenseSuccess);
	
	//Monster
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Monster_Weapon);
	
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Monster_Ability_Attack_Melee);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Monster_Ability_Attack_Ranged);

	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Monster_Status_Strafe);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Monster_Status_IsBeingAttacked);

	// Character
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Character_Event_AttackHit_Melee);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Character_Event_HitReact);

	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Character_Ability_HitReact);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Character_Ability_Death);

	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Character_Status_Dead);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Character_Status_HitReact_Front);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Character_Status_HitReact_Back);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Character_Status_HitReact_Left);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Character_Status_HitReact_Right);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Character_Status_Invincible);

	//Data
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Data_Value_SetByCaller_BaseDamage);

	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Data_DamageType_SetByCaller_Light);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Data_DamageType_SetByCaller_Heavy);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Data_DamageType_SetByCaller_Parrying);

	//GamePlayCue
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayCue_Player_Fighter_Sound_AttackHit_Melee_Light);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayCue_Player_Fighter_Sound_AttackHit_Melee_Heavy);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayCue_Player_Fighter_Sound_AttackHit_Parrying);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayCue_Player_Fighter_Effect_Defense);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayCue_Player_Fighter_Effect_DefenseSucess);
	RPGPORTFOLIO_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayCue_Player_Fighter_Effect_DefenseParrying);


}